#!/bin/bash

## Script de Backup

# Este script cria um backup dos arquivos importantes na pasta home e faz upload para um servidor remoto.

# Verifica se a pasta de backup existe, caso contrário, cria-a
if [ ! -d ~/backups ]; then
    mkdir ~/backups
fi

# Compacta os arquivos importantes e salva na pasta de backup
tar -cvzf ~/backups/home_$(date +"%Y-%m-%d_%H-%M-%S").tar.gz ~/Documents ~/Pictures ~/Videos

# Faz upload do backup para o servidor remoto
read -p "Digite o endereço IP do servidor remoto: " server_ip
read -p "Digite o nome de usuário para o servidor remoto: " server_username
read -p "Digite o caminho para a pasta de backup no servidor remoto: " remote_path
scp -r ~/backups/* $server_username@$server_ip:$remote_path

## Script de Monitoramento

# monitora o uso de disco, memória e CPU e envia um e-mail em caso de uso alto

# define o intervalo para monitoramento (em segundos)
interval=60

# Define o limite para envio de e-mail
cpu_threshold=80
memory_threshold=70
disk_threshold=70

# loop de monitoramento
while true; do
    # Obtém a data e hora atuais
    date_time=$(date +"%Y-%m-%d %H:%M:%S")

    # Obtém o uso de disco
    disk_usage=$(df -h | awk 'NR==2{print $5}')

    # Obtém o uso de memória
    memory_usage=$(free -m | awk 'NR==2{print $3/$2 * 100.0}')

    # Obtém o uso de CPU
    cpu_usage=$(top -bn1 | awk '{print $9}' | tail -n+8 | awk '{s+=$1} END {print s}')

    # verifica se o uso está acima do limite
    if [ $(echo "$cpu_usage > $cpu_threshold" | bc) -eq 1 ]; then
        echo "Uso de CPU está acima do limite"
        echo "Data e Hora: $date_time - CPU: $cpu_usage" | mail -s "Alerta de uso alto de CPU" admin@example.com
    fi

    if [ $(echo "$memory_usage > $memory_threshold" | bc) -eq 1 ]; then
        echo "Uso de Memória está acima do limite"
        echo "Data e Hora: $date_time - Memória: $memory_usage" | mail -s "Alerta de uso alto de Memória" admin@example.com

   if [ $(echo "$disk_usage > $disk_threshold" | bc) -eq 1 ]; then
	echo "Uso de disco está acima do limite"
	echo "Data e Hora: $date_time - Disco: $disk_usage" | mail -s "Alerta de uso alto de disco" admin@example.com
   fi

# organizar os arquivos na pasta downloads por tipo de arquivo e os move para um servidor remoto

# cria as pastas necessárias se elas não existirem
if [ ! -d ~/Downloads/Documents ]; then
    mkdir ~/Downloads/Documents
fi
if [ ! -d ~/Downloads/Pictures ]; then
    mkdir ~/Downloads/Pictures
fi
if [ ! -d ~/Downloads/Videos ]; then
    mkdir ~/Downloads/Videos
fi

# move os arquivos para as pastas apropriadas
find ~/Downloads -type f -name '*.pdf' -exec mv {} ~/Downloads/Documents/ \;
find ~/Downloads -type f -name '*.jpg' -exec mv {} ~/Downloads/Pictures/ \;
find ~/Downloads -type f -name '*.mp4' -exec mv {} ~/Downloads/Videos/ \;

# faz upload dos arquivos para o servidor remoto
read -p "Digite o endereço IP do servidor remoto: " server_ip
read -p "Digite o nome de usuário para o servidor remoto: " server_username
read -p "Digite o caminho para o diretório remoto: " remote_path
scp -r ~/Downloads/* $server_username